;;
;;  ANSI Common Lisp 日本語訳
;;  15. 配列
;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;  System Class ARRAY
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
@begin: 15.2.array
@name: array
@type: system-class

System Class `ARRAY`


## {class-precedence-list}

{array:link},
{t!system-class:link}


## {description}

配列はオブジェクトを直交座標系にしたがって配置されたものを含みます。
配列は、`fixnum`の集合である`{i0, i1, ..., ir-1}`と
対応する配列の要素のマッピングを提供します。
ただし`0 <= ij < dj`であり、`r`は配列のランク、`dj`は配列の大きさ`j`のサイズです。

配列が作成されたとき、プログラムはその生成の要求として、
{expressed-array-element-type}と呼ばれる全ての要素に対する特定の型を
宣言することができます。
実装はこの{expressed-array-element-type}を生成するために、
型をアップグレードすることが許されており、
実際に配列の要素の型は特定化されます。
{upgraded-array-element-type:link}関数をご確認ください。


## {compound-type-specifier-kind}

特定化


## {compound-type-specifier-syntax}

`array` [`{`*element-type* `|` \*`}` [*dimension-spec*]]

```
dimension-spec::= rank | * | ({dimension | *}*) 
```


## {compound-type-specifier-arguments}

*dimension* - {valid-array-dimension}  
*element-type* - 型指定子  
*rank* - 非負の`fixnum`


## {compound-type-specifier-description}

これは要素の型、ランク、大きさが
それぞれ*element-type*、*rank*、*dimension*にマッチするような
配列の集合を意味します。

もし*element-type*がシンボルの`*`のとき、
配列は要素の型に基づいて排他しません。
そうでないときは、配列は*element-type*をアップグレードした結果の
{actual-array-element-type}だけを含みます。
{15.1.2.1:ab}をご確認ください。

もし*dimension-spec*が*rank*のときは、
集合はただランクが*rank*である配列のみを含みます。
もし*dimension-spec*が*dimension*のリストのときは、
集合はただランクが*dimension*のリストの長さであり、
*dimension*のリストで指定された大きさを持つものを含みます。
この場合、`*`は対応する大きさのどんな値にもマッチします。
もし*dimension-spec*がシンボルの`*`のときは、
集合はランクと大きさに基づいて制限しません。


## {see-also}

{*print-array*:link},
{aref:link},
{make-array:link},
{vector!system-class:link},
{2.4.8.12:ab},
{22.1.3.8:ab}


## {notes}

型`(array t)`は、`(array *)`の正しいサブタイプであることに注意してください。
この理由は、型`(array t)`は
どんなオブジェクトでも格納できる配列の集合だからです
（要素は型{t!system-class:link}であり、全てのオブジェクトが含まれます）。
一方、型`(array *)`は何でもいい全ての配列の集合であり、
それは例えば文字のみを格納できる配列が含まれます。
型`(array character)`は、型`(array t)`のサブタイプではありません。
それらの2つの集合は互いに素であり、
なぜなら型`(array character)`は文字を格納できる全ての集合ではなく、
厳密に文字を格納できてその他のオブジェクトは格納できないという
特定化された配列の集合だからです。

@end

