;;
;;  ANSI Common Lisp 日本語訳
;;  10. シンボル
;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;  Function GENSYM
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
@begin: 10.2.gensym
@name: gensym
@type: function

Function `GENSYM`


## {syntax}

*gensym* &optional *x* => *new-symbol*


## {arguments-and-values}

*x* - 文字列か、非負の整数。
複雑な動作をするので下記をご確認ください。  
*new-symbol* - 新しい、`unintern`なシンボル


## {description}

{make-symbol:link}が呼ばれたかように、
新しく、`unintern`なシンボルが作成し返却されます。
（{gensym:link}と{make-symbol:link}の唯一の違いは、
どのように*new-symbol*の名前を決めるかです）

*new-symbol*の名前は、
標準では`"G"`のプレフィックスと、
標準では{*gensym-counter*:link}の値を
10進数の数で表現したサフィックスを、
順に結合したものになります。

もし*x*が与えられ、それが文字列のときは、
その{gensym:link}が呼ばれたときのみ、
`"G"`の代わりのプレフィックスとして使われます。

もし*x*が与えられ、それが整数のときは、
その{gensym:link}が呼ばれたときのみ、
{*gensym-counter*:link}の値の代わりとして、
サフィックスの整数値として使われます。

明にサフィックスが与えられなかった場合は、
実行後に{*gensym-counter*:link}がインクリメントされます。


## {examples}

```lisp
(setq sym1 (gensym)) =>  #:G3142
(symbol-package sym1) =>  NIL
(setq sym2 (gensym 100)) =>  #:G100
(setq sym3 (gensym 100)) =>  #:G100
(eq sym2 sym3) =>  false
(find-symbol "G100") =>  NIL, NIL
(gensym "T") =>  #:T3143
(gensym) =>  #:G3144
```


## {side-effects}

{*gensym-counter*:link}はインクリメントされるかもしれません。


## {affected-by}

{*gensym-counter*:link}


## {exceptional-situations}

もし*x*が文字列でも、非負の整数でもなければ、
型{type-error:link}のエラーが発せられます。


## {see-also}

{gentemp:link},
{*gensym-counter*:link}


## {notes}

{gensym:link}の引数に数値を渡す機能は非推奨になり、
明示的に{*gensym-counter*:link}を束縛するのが
様式上好まれるようになりました。
（オプション引数の多少奇妙な慣習は、本来の歴史的なものであり、
主に古いLispの方言との互換性のためにサポートされています。
現代のコードでは、引数に文字列のプレフィックスのみを
使用することが推奨されています。
しかし、一般的には、
より柔軟に*new-symbol*の名前を制御したいのであれば、
代わりに{make-symbol:link}の使用を検討してください。）

@end

