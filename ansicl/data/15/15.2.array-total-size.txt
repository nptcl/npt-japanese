;;
;;  ANSI Common Lisp 日本語訳
;;  15. 配列
;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;  Function ARRAY-TOTAL-SIZE
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
@begin: 15.2.array-total-size
@name: array-total-size
@type: function

Function `ARRAY-TOTAL-SIZE`


## {syntax}

`array-total-size` *array* => *size*


## {arguments-and-values}

*array* - 配列  
*size* - 非負の整数  


## {description}

*array*の配列の全てのサイズを返却します。


## {examples}

```lisp
(array-total-size (make-array 4)) =>  4
(array-total-size (make-array 4 :fill-pointer 2)) =>  4
(array-total-size (make-array 0)) =>  0
(array-total-size (make-array '(4 2))) =>  8
(array-total-size (make-array '(4 0))) =>  0
(array-total-size (make-array '())) =>  1
```


## {affected-by}

なし。


## {exceptional-situations}

もし引数が配列ではなかったとき、型{type-error:link}のエラーが発生します。


## {see-also}

{make-array:link},
{array-dimensions:link}


## {notes}

もし*array*が{fill-pointer}を持つ`vector`のとき、
配列の全てのサイズを計算するときに{fill-pointer}は無視されます。

引数が存在せず積が`1`のとき、
ゼロ次元の配列に対する配列の全てのサイズは`1`です。

```lisp
(array-total-size x)
   ==  (apply #'* (array-dimensions x))
   ==  (reduce #'* (array-dimensions x))
```

@end

