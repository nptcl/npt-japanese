;;
;;  ANSI Common Lisp 日本語訳
;;  14. コンス
;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;  Macro POP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
@begin: 14.2.pop
@name: pop
@type: macro

Macro `POP`


## {syntax}

`pop` *place* => *element*


## {arguments-and-values}

*place* - {place},
リストである値（{dotted-list}か{circular-list}の可能性があります）  
*element* - オブジェクト（*place*の内容の`car`部）


## {description}

{pop:link}は*place*から値を読み、
取得されたリストの`car`を取得し、
*place*にリストの`cdr`を書き込み、
そして最後にリストから取得した元の`car`部を返却します。

*place*のサブフォームの評価については、
{5.1.1.1:ab}をご確認ください。


## {examples}

```lisp
(setq stack '(a b c)) =>  (A B C)
(pop stack) =>  A  
stack =>  (B C)
(setq llst '((1 2 3 4))) =>  ((1 2 3 4))
(pop (car llst)) =>  1
llst =>  ((2 3 4))
```


## {side-effects}

*place*の内容は修正されます。


## {affected-by}

なし。


## {exceptional-situations}

なし。


## {see-also}

{push:link},
{pushnew:link},
{5.1:ab}


## {notes}

`(pop place)`の効果は、だいたい次と同等です。

```lisp
(prog1 (car place) (setf place (cdr place)))
```

ただし、これはサブフォームを3回評価するのに対して、
{pop:link}はそれをたった一度しか評価しません。

@end

