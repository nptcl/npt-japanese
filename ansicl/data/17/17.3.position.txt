;;
;;  ANSI Common Lisp 日本語訳
;;  17. シーケンス
;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;  Function POSITION
;;  Function POSITION-IF
;;  Function POSITION-IF-NOT
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
@begin: 17.3.position
@name: position
@name: position-if
@name: position-if-not
@type: function

Function `POSITION`, `POSITION-IF`, `POSITION-IF-NOT`


## {syntax}

`position` *item* *sequence*
 &key *from-end* *test* *test-not* *start* *end* *key* => *position*  
`position-if` *predicate* *sequence* &key *from-end* *start* *end* *key* => *position*  
`position-if-not` *predicate* *sequence* &key *from-end* *start* *end* *key* => *position*


## {arguments-and-values}

*item* - オブジェクト  
*sequence* - {proper-sequence}  
*predicate* - 1つの引数をとり{generalized-boolean}を返却する関数の指定子  
*from-end* - {generalized-boolean}、デフォルトは*false*  
*test* - 2つの引数を取り{generalized-boolean}を返却する関数の指定子  
*test-not* - 2つの引数を取り{generalized-boolean}を返却する関数の指定子  
*start*, *end* - *sequence*の{bounding-index-designators}。
デフォルトは*start*, *end*それぞれ`0`と{nil!variable:link}。  
*key* - 1つの引数を取る関数の指定子、または{nil!variable:link}  
*position* - *sequence*の{bounding-index}か、{nil!variable:link}


## {description}

{position:link}、{position-if:link}、{position-if-not:link}は、
それぞれテストを満たす要素を検索します。

返却値*position*は、
*sequence*内でテストを満たす
もっとも左の要素（*from-end*が*false*のとき）か、
もっとも右の要素（*from-end*が*true*のとき）のインデックスです。
もし見つからなかったときは、{nil!variable:link}が返却されます。
インデックスの返却値は、
*start*, *end*, *from-end*に関係なく、
*seqeunce*全体の左端から相対的なものです。


## {examples}

```lisp
(position #\a "baobab" :from-end t) =>  4
(position-if #'oddp '((1) (2) (3) (4)) :start 1 :key #'car) =>  2
(position 595 '()) =>  NIL
(position-if-not #'integerp '(1 2 3 4 5.0)) =>  4 
```


## {side-effects}

なし。


## {affected-by}

なし。


## {exceptional-situations}

*sequence*が{proper-sequence}でないとき、
型{type-error:link}のエラーを通知する準備をしなければなりません。


## {see-also}


{find:link},
{3.6:ab}


## {notes}

`:test-not`パラメーターは非推奨です。

関数{position-if-not:link}は非推奨です。

@end

