;;
;;  ANSI Common Lisp 日本語訳
;;  7. オブジェクト
;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;  Standard Generic Function MAKE-INSTANCE
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
@begin: 7.7.make-instance
@name: make-instance
@type: standard-generic-function

Standard Generic Function `MAKE-INSTANCE`


## {syntax}

`make-instance` *class* &rest *initargs* &key &allow-other-keys => *instance*


## {method-signatures}

`make-instance` (*class* {standard-class:link}) &rest *initargs*  
`make-instance` (*class* {symbol:link}) &rest *initargs*


## {arguments-and-values}

class - クラスか、クラス名のシンボル  
initargs - {initialization-arguments}リスト  
instance - 新しい*class*クラスのインスタンス


## {description}

ジェネリック関数{make-instance:link}は、
クラス*class*の新しいインスタンスを作成して返却します。

もし上記メソッド定義の2番目が選ばれたとき、
そのメソッドは、第一引数を`(find-class class)`、
そのあとの引数を*initargs*として{make-instance:link}を実行します。

{initialization-arguments}は、{make-instance:link}内でチェックされます。

ジェネリック関数{make-instance:link}は、
{7.1:ab}に記載されているように使われます。



## {affected-by}

なし。


## {exceptional-situations}

もし{initialization-arguments}が有効として定義されていない場合は、
型{error!condition:link}のエラーが発生します。


## {see-also}

{defclass:link},
{class-of:link},
{allocate-instance:link},
{initialize-instance:link},
{7.1:ab}


## {notes}

なし。

@end

