;;
;;  ANSI Common Lisp 日本語訳
;;  9. コンディション
;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;  Function COMPUTE-RESTARTS
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
@begin: 9.2.compute-restarts
@name: compute-restarts
@type: function

Function `COMPUTE-RESTARTS`


## {syntax}

`compute-restarts` `&optional` *condition* => *restarts*


## {arguments-and-values}

*condition* - コンディションオブジェクトか、{nil!variable:link}  
*restarts* - `restart`のリスト


## {description}

{compute-restarts:link}はそのプログラムの動的状態から
現在有効の`restart`のリストを計算するときに使われます。

結果のリストには順番があり、
もっとも内側の（より最近確立されたもの）`restart`が
リストの先頭に近いものになります。

もし*condition*が{nil!variable:link}ではないときは、
それらの`restart`は、明に*condition*と関連付けられているものか、
あるいはどのコンディションにも関連付けられてないものかの
どちらかのみが集められます。
これは、排他された`restart`というのは、
関連付けられたコンディションの集合が空ではなく、
その要素に指定した*condition*が含まれていないということです。
もし*condition*が{nil!variable:link}のときは、
全ての`restart`が集められます。

{compute-restarts:link}は全ての適用可能な`restart`が返却され、
それには匿名のものや、
あるものが他のものと同じ名前のものも含まれるため、
したがって{find-restart:link}の引数にシンボルを指定したものでは
見つけることができないものも含まれます。

実装は、同じ動的環境下で{compute-restarts:link}を繰り返し呼び出したときに、
違うリストを返却することが許されますが、必須ではありません。
{compute-restarts:link}によって返却されたリストを
全て変更したときの結果は未定義です。


Examples:

```lisp
;; ユーザーへrestartを表示させるような
;; 対話式デバッガーのひとつの方法
(defun invoke-a-restart ()
  (let ((restarts (compute-restarts)))
    (do ((i 0 (+ i 1)) (r restarts (cdr r))) ((null r))
      (format t "~&~D: ~A~%" i (car r)))
    (let ((n nil) (k (length restarts)))
      (loop (when (and (typep n 'integer) (>= n 0) (< n k))
              (return t))
            (format t "~&Option: ")
            (setq n (read))
            (fresh-line))
      (invoke-restart-interactively (nth n restarts)))))

(restart-case (invoke-a-restart)
  (one () 1)
  (two () 2)
  (nil () :report "Who knows?" 'anonymous)
  (one () 'I)
  (two () 'II))
>>  0: ONE
>>  1: TWO
>>  2: Who knows?
>>  3: ONE
>>  4: TWO
>>  5: Return to Lisp Toplevel.
>>  Option: 4
=>  II

;; ユーザー定義のrestartを追加した地点では、COMPUTE-RESTARTは
;; システムが用意したrestartの情報も返却してしまうことに注意してください。
;; 例えば上記の"Return to Lisp Toplevel"がそうです。
```

 
## {side-effects}

なし。


## {affected-by}

存在する`restart`


## {exceptional-situations}

なし。


## {see-also}

{find-restart:link},
{invoke-restart:link},
{restart-bind:link}


## {notes}

なし。

@end

