;;
;;  ANSI Common Lisp 日本語訳
;;  9. コンディション
;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;  Condition Type SIMPLE-CONDITION
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
@begin: 9.2.simple-condition
@name: simple-condition
@type: condition-type

Condition Type `SIMPLE-CONDITION`


## {class-precedence-list}

{simple-condition:link},
{condition:link},
{t!system-class:link}


## {description}

型{simple-condition:link}は、{signal:link}関数が
その最初の引数を*format-control*で指定して
いつでも通知できるようなコンディションの表現です。
*format-control*と*format-arguments*は、
{make-condition:link}によって
それぞれ`:format-control`と`:format-arguments`という
初期化引数で初期化され、
またそれらは{simple-condition-format-control:link}と
{simple-condition-format-arguments:link}という関数でアクセスできます。
もし{make-condition:link}で*format-arguments*が指定されなかったときは、
デフォルト値として{nil!variable:link}が使用されます。


## {see-also}

{simple-condition-format-control:link},
{simple-condition-format-arguments:link}

@end


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;  Function SIMPLE-CONDITION-FORMAT-CONTROL
;;  Function SIMPLE-CONDITION-FORMAT-ARGUMENTS
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
@begin: 9.2.simple-condition-format-control
@name: simple-condition-format-control
@name: simple-condition-format-arguments
@type: function

Function `SIMPLE-CONDITION-FORMAT-CONTROL`, `SIMPLE-CONDITION-FORMAT-ARGUMENTS`


## {syntax}

`simple-condition-format-control` *condition* => *format-control*  
`simple-condition-format-arguments` *condition* => *format-arguments*


## {arguments-and-values}

*condition* - 型{simple-condition:link}のコンディション  
*format-control* - {format-control}  
*format-arguments* - リスト


## {description}

{simple-condition-format-control:link}は、
*condition*の*format-arguments*の処理で必要になる*format-control*を返却します。

{simple-condition-format-arguments:link}は、
*condition*の*format-control*の処理で必要になる*format-arguments*を返却します。


## {examples}

```lisp
(setq foo (make-condition 'simple-condition
                         :format-control "Hi ~S"
                         :format-arguments '(ho)))
=>  #<SIMPLE-CONDITION 26223553>
(apply #'format nil (simple-condition-format-control foo)
                    (simple-condition-format-arguments foo))
=>  "Hi HO"
```


## {side-effects}

なし。


## {affected-by}

なし。


## {exceptional-situations}

なし。


## {see-also}

{simple-condition:link},
{9.1:ab}


## {notes}

なし。

@end

