;;
;;  ANSI Common Lisp 日本語訳
;;  7. オブジェクト
;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;  7.1.2 {initialization-arguments}の有効性の宣言
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
@begin: 7.1.2
@type: text

{initialization-arguments}は、4つの状況にて有効性がチェックされます。
{initialization-arguments}はひとつの状況では有効かもしれませんが、
他はそうではないかもしれません。
例えば、システムで提供された{make-instance:link}のメソッドの
{standard-class:link}クラスを対象とした場合を考えます。
もし{initialization-arguments}が与えられていたものの、
有効性としての宣言がされていなかった場合、
メソッドは{initialization-arguments}の有効性チェックにおいて
エラーのシグナルを発することになります。

{initialization-arguments}の有効性の宣言は、次の2つの意味があります。

- スロットを設定するときの{initialization-arguments}は、
{defclass:link}のスロットオプションである
`:initarg`によって有効であるとして宣言されます。
スロットオプションの`:initarg`は、スーパークラスから継承されます。
よって、クラスのスロット設定時の有効な{initialization-arguments}の集合は、
クラスとスーパークラスによって有効であると宣言されたスロット設定時の
{initialization-arguments}の和集合となります。
{initialization-arguments}による値の設定は、4つの状況すべてにおいて有効です。

- メソッドの引数として与えられた{initialization-arguments}は、
これらメソッドの宣言によって有効であると定義されます。
メソッドのラムダリストとして定義されたキーワードパラメーターのキーワード名は、
全てのクラスの適用可能なメソッドの{initialization-arguments}となります。
適用されるメソッドのラムダリストにある`&allow-other-keys`の存在は、
{initialization-arguments}の有効性のチェックを無効にします。
よってメソッドの継承は、メソッドに引数として渡される有効な
{initialization-arguments}の集合を制御します。
メソッドの定義を持ったジェネリック関数は、下記に示すものとして、
有効な{initialization-arguments}の宣言を守ります。

- 関数{allocate-instance:link},
{initialize-instance:link}と{shared-initialize:link}により、
クラスのインスタンスを作成するとき。
クラスのインスタンスを作成するとき、
これらのメソッドにより有効だと宣言された{initialization-arguments}は有効です。

- 関数{reinitialize-instance:link}と
{shared-initialize:link}により、インスタンスの再初期化が行われるとき。
インスタンスの再初期化が行われるとき、
これらのメソッドにより有効だと宣言された{initialization-arguments}は有効です。

- 関数{update-instance-for-redefined-class:link}と
{shared-initialize:link}により、
再定義されたクラスにインスタンスを更新するとき。
再定義されたクラスにインスタンスを更新するとき、
これらのメソッドにより有効だと宣言された{initialization-arguments}は有効です。

- 関数{update-instance-for-different-class:link}と
{shared-initialize:link}により、
違うクラスの定義にインスタンスを更新するとき。
違うクラスの定義にインスタンスを更新するとき、
これらのメソッドにより有効だと宣言された{initialization-arguments}は有効です。

クラスの有効な{initialization-arguments}の集合は、スロットの値の設定か、
あるいは{initialization-arguments}の前宣言として与えられる`:allow-other-keys`に従った
メソッドの引数かのどちらかの{initialization-arguments}の集合です。
`:allow-other-keys`のデフォルト値は`nil`です。
もし{initialization-arguments}`:allow-other-keys`の値が`true`であるならば、
{initialization-arguments}の有効性の確認は無効となります。

@end

